name: CI
on:
  push:
    branches:
      - main

jobs:
  windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Look Changelog
        uses: jaywcjlove/changelog-generator@main
        with:
          filter-author: (Â∞èÂºüË∞ÉË∞É‚Ñ¢|Renovate Bot|renovate-bot)
          filter: '[R|r]elease[d]\s+[v|V]\d(\.\d+){0,2}'

      - run: npm install --unsafe-perm
      - run: npm run hoist
      - run: npm run build
      - run: npm run doc

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - run: npm install --unsafe-perm
      - run: npm run hoist
      - run: npm run build
      - run: npm run doc

      - name: Generate Contributors Images
        uses: jaywcjlove/github-action-contributors@main
        with:
          filter-author: (renovate\[bot\]|renovate-bot|dependabot\[bot\])
          output: website/build/CONTRIBUTORS.svg
          avatarSize: 42

      - uses: actions/upload-artifact@v3
        with:
          name: webiste
          path: |
            website/build/**

      - name: Is a tag created auto?
        id: create_tag
        uses: jaywcjlove/create-tag-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          package-path: ./core/package.json

      - name: get tag version
        id: tag_version
        uses: jaywcjlove/changelog-generator@main

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          commit_message: ${{steps.tag_version.outputs.tag}} ${{ github.event.head_commit.message }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build

      - name: Generate Changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@main
        if: steps.create_tag.outputs.successful
        with:
          head-ref: ${{ steps.create_tag.outputs.version }}
          filter-author: (Â∞èÂºüË∞ÉË∞É‚Ñ¢|Renovate Bot|renovate-bot)
          filter: '[R|r]elease[d]\s+[v|V]\d(\.\d+){0,2}'

      - name: Create Release
        uses: ncipollo/release-action@v1
        if: steps.create_tag.outputs.successful
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ steps.changelog.outputs.tag }}
          tag: ${{ steps.changelog.outputs.tag }}
          body: |
            [![Buy me a coffee](https://img.shields.io/badge/Buy%20me%20a%20coffee-048754?logo=buymeacoffee)](https://jaywcjlove.github.io/#/sponsor) 

            Documentation ${{ steps.changelog.outputs.tag }}: https://raw.githack.com/uiwjs/react-monorepo-template/${{ steps.changelog.outputs.gh-pages-short-hash }}/index.html  
            Comparing Changes: ${{ steps.changelog.outputs.compareurl }}  
            
            ${{ steps.changelog.outputs.changelog }}

      # - run: git status
      # - run: npm install @jsdevtools/npm-publish -g
      # - run: npm-publish --token="${{ secrets.NPM_TOKEN }}" ./core/package.json


      - run: npm publish --access public --provenance
        name: üì¶ @wcj/code-image publish to NPM
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


    outputs:
      version: ${{ steps.changelog.outputs.version }}
      create_tag_version: ${{ steps.create_tag.outputs.version }}
      create_tag_versionNumber: ${{ steps.create_tag.outputs.versionNumber }}
      tag: ${{ steps.changelog.outputs.tag }}
      successful: ${{steps.create_tag.outputs.successful }}
      gh-pages-short-hash: ${{ steps.changelog.outputs.gh-pages-short-hash }}

  docker: 
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: webiste
          path: website/build

      - run: echo "outputs.version - ${{ needs.build.outputs.version }}"
      - run: echo "outputs.create_tag_version - ${{ needs.build.outputs.create_tag_version }}"
      - run: echo "outputs.create_tag_versionNumber - ${{ needs.build.outputs.create_tag_versionNumber }}"
      - run: echo "outputs.tag - ${{ needs.build.outputs.tag }}"

      # Create Docker Image
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build code-image image
        run: docker image build -t code-image .

      - name: Tags & Push image (latest)
        run: |
          echo "outputs.tag - ${{ needs.build.outputs.version }}"
          docker tag code-image ${{ secrets.DOCKER_USER }}/code-image:latest
          docker push ${{ secrets.DOCKER_USER }}/code-image:latest
      - name: Tags & Push image
        if: needs.build.outputs.successful
        run: |
          echo "outputs.tag - ${{ needs.build.outputs.version }}"
          docker tag code-image ${{ secrets.DOCKER_USER }}/code-image:${{needs.build.outputs.version}}
          docker push ${{ secrets.DOCKER_USER }}/code-image:${{needs.build.outputs.version}}

      # # Create Docker Image in GitHub
      # - name: Login to GitHub registry
      #   run: echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # - name: Build docker image
      #   run: docker build -t ghcr.io/jaywcjlove/code-image:latest .

      # - name: Publish to GitHub registry
      #   run: docker push ghcr.io/jaywcjlove/code-image:latest

      # - name: Tag docker image (beta) and publish to GitHub registry
      #   if: needs.build.outputs.successful
      #   run: |
      #       echo "version: v${{ needs.build.outputs.version }}"
      #       docker tag ghcr.io/jaywcjlove/code-image:latest ghcr.io/jaywcjlove/code-image:${{needs.build.outputs.version}}
      #       docker push ghcr.io/jaywcjlove/code-image:${{needs.build.outputs.version}}
